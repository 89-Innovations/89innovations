---
import Logo from '@/components/logo.astro';
import Link from '@/components/ui/link.astro';
import { Astronav, MenuIcon, MenuItems, StickyHeader } from 'astro-navbar';
import Dropdown from './dropdown.astro';

const pathname = Astro.url.pathname;
const { navItems, ctaLink, logo } = Astro.props;
const { href, label, size, block, style } = ctaLink;

const scrollY = 50;
const defaultClass = 'border-transparent';
const activeClass = 'bg-white/80 border-gray-200 backdrop-blur-lg';
---

<StickyHeader
  class='mx-auto py-5 px-4 lg:px-8 sticky top-0 border-b z-20 transition-all flex flex-col lg:flex-row justify-between items-center xl:px-32'
  scrollY={scrollY}
  defaultClass={defaultClass}
  activeClass={activeClass}
>
  <Astronav>
    <div class='flex w-full lg:w-auto items-center justify-between'>
      <Logo {logo} />
      <div class='block lg:hidden'>
        <MenuIcon class='w-6 h-6 text-gray-700' />
      </div>
    </div>

    <MenuItems class='hidden w-full lg:w-auto mt-2 lg:flex'>
      <ul class='flex flex-col lg:items-center lg:flex-row lg:gap-8'>
        {
          navItems.map(
            (item: {
              children: { title: string; path: string }[];
              title: string;
              path: string;
            }) => (
              <>
                {item.children.length > 0 && (
                  <Dropdown
                    title={item.title}
                    lastItem={item === navItems[navItems.length - 1]}
                    children={item.children}
                  />
                )}
                {!item.children.length && (
                  <li class='relative group'>
                    <a
                      href={item.path}
                      class:list={[
                        'flex hover:text-accent uppercase p-2 lg:p-0 font-semibold tracking-widest transition-all ease-linear',
                        pathname === item.path
                          ? 'underline decoration-accent decoration-2 underline-offset-4'
                          : '',
                      ]}
                    >
                      {item.title}
                    </a>
                  </li>
                )}
              </>
            )
          )
        }
      </ul>
      <div class='lg:hidden flex items-center mt-3 gap-4 flex-col w-full'>
        <Link
          href={href}
          size={size}
          style={style}
          class='flex gap-1 items-center justify-center'
          {block}
        >
          {label}
        </Link>
      </div>
    </MenuItems>
  </Astronav>
  <div class='hidden lg:flex items-center'>
    <Link
      href={href}
      size={size}
      style={style}
      class='flex gap-1 items-center justify-center'
    >
      {label}
    </Link>
  </div>
</StickyHeader>

<script
  data-astro-rerun
  is:inline
  define:vars={{ scrollY, activeClass, defaultClass }}
>
  const header = document.querySelector('header');

  function onScroll() {
    if (window.scrollY > scrollY) {
      header.classList.add(...activeClass.split(' '));
      header.classList.remove(...defaultClass.split(' '));
    } else {
      header.classList.remove(...activeClass.split(' '));
      header.classList.add(...defaultClass.split(' '));
    }
  }

  function initializeStickyHeader() {
    window.addEventListener('scroll', onScroll);
  }

  function cleanupStickyHeader() {
    window.removeEventListener('scroll', onScroll);
  }

  // Initialize on page load
  initializeStickyHeader();

  // Cleanup on navigation
  document.addEventListener('astro:before-swap', cleanupStickyHeader);

  // Reinitialize on navigation
  document.addEventListener('astro:after-swap', initializeStickyHeader);
</script>
